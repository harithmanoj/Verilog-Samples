$date
	Sat May 15 21:39:07 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RippleAdder_4_tb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module rippleAdder4Bit $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " cout $end
$var wire 3 ) c [2:0] $end
$scope module f0 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % cin $end
$var wire 1 , cout $end
$var wire 1 - sum $end
$upscope $end
$scope module f1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 cin $end
$var wire 1 1 cout $end
$var wire 1 2 sum $end
$upscope $end
$scope module f2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 cin $end
$var wire 1 6 cout $end
$var wire 1 7 sum $end
$upscope $end
$scope module f3 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : cin $end
$var wire 1 " cout $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
bx )
bx (
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#2
1;
1:
16
07
02
15
00
11
1"
b110 )
0,
b1001 !
b1001 (
1-
0+
1/
04
19
0*
1.
13
18
1%
b1010 $
b1010 '
b1110 #
b1110 &
#4
05
0;
01
0:
07
b0 )
06
b1 !
b1 (
1-
1+
0/
0.
03
0%
b1001 $
b1001 '
b1000 #
b1000 &
#6
1;
1:
16
15
11
0"
10
02
07
b111 )
1,
b1000 !
b1000 (
0-
0+
1/
14
09
1*
08
1%
b110 $
b110 '
b1 #
b1 &
#8
05
01
12
1"
00
0;
07
b100 )
0,
b11 !
b11 (
1-
0/
19
1.
13
0%
b1100 $
b1100 '
b111 #
b111 &
#10
17
15
0"
11
1;
0:
02
06
10
b11 )
1,
b1100 !
b1100 (
0-
1/
04
09
0.
03
18
1%
b10 $
b10 '
b1001 #
b1001 &
#12
1"
0;
1:
10
12
07
16
b111 )
1,
b10 !
b10 (
0-
1+
1.
13
0%
b11 $
b11 '
b1111 #
b1111 &
#14

$date
	Thu May 13 14:07:16 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! Sout $end
$var wire 8 " out [7:0] $end
$var wire 1 # Zout $end
$var wire 1 $ Pout $end
$var wire 1 % Cout $end
$var reg 1 & C $end
$var reg 1 ' P $end
$var reg 1 ( S $end
$var reg 1 ) Z $end
$var reg 8 * a [7:0] $end
$var reg 8 + b [7:0] $end
$var reg 4 , op [3:0] $end
$scope module modAlu $end
$var wire 1 % C $end
$var wire 1 & Cin $end
$var wire 1 - Csample $end
$var wire 1 ' Pin $end
$var wire 1 ! S $end
$var wire 1 ( Sin $end
$var wire 1 # Z $end
$var wire 1 ) Zin $end
$var wire 8 . a [7:0] $end
$var wire 8 / andRes [7:0] $end
$var wire 8 0 b [7:0] $end
$var wire 1 1 carry $end
$var wire 1 2 genShiftCarry $end
$var wire 1 3 in $end
$var wire 1 4 inCarry $end
$var wire 1 5 inLSB $end
$var wire 1 6 inMSB $end
$var wire 1 7 inZero $end
$var wire 8 8 notRes [7:0] $end
$var wire 4 9 op [3:0] $end
$var wire 8 : orRes [7:0] $end
$var wire 1 ; shouldAdd $end
$var wire 1 < shouldGenC $end
$var wire 1 = shouldLogic $end
$var wire 1 > shouldShiftLeft $end
$var wire 1 ? shouldShiftRight $end
$var wire 1 @ shouldSiftRight $end
$var wire 8 A xorRes [7:0] $end
$var wire 8 B zero [7:0] $end
$var wire 8 C signedB [7:0] $end
$var wire 8 D shiftRightIn [7:0] $end
$var wire 8 E shiftOut [7:0] $end
$var wire 8 F shiftLeftIn [7:0] $end
$var wire 8 G rightOut [7:0] $end
$var wire 8 H out [7:0] $end
$var wire 8 I orXorSelect [7:0] $end
$var wire 8 J notAndSelect [7:0] $end
$var wire 8 K logicArithOut [7:0] $end
$var wire 8 L leftOut [7:0] $end
$var wire 1 M genShiftCarryR $end
$var wire 1 N genShiftCarryL $end
$var wire 8 O arithOut [7:0] $end
$var wire 1 P arithCarry $end
$var wire 8 Q addInB [7:0] $end
$var wire 8 R addB [7:0] $end
$var wire 8 S addA [7:0] $end
$var wire 1 $ P $end
$var wire 8 T LogicOut [7:0] $end
$scope module adder $end
$var wire 1 1 cin $end
$var wire 8 U sum [7:0] $end
$var wire 8 V p [7:0] $end
$var wire 8 W g [7:0] $end
$var wire 1 P cout $end
$var wire 8 X c [7:0] $end
$var wire 8 Y b [7:0] $end
$var wire 8 Z a [7:0] $end
$scope module add0 $end
$var wire 1 [ a $end
$var wire 1 \ b $end
$var wire 1 1 cin $end
$var wire 1 ] g $end
$var wire 1 ^ p $end
$var wire 1 _ sum $end
$upscope $end
$scope module add1 $end
$var wire 1 ` a $end
$var wire 1 a b $end
$var wire 1 b cin $end
$var wire 1 c g $end
$var wire 1 d p $end
$var wire 1 e sum $end
$upscope $end
$scope module add2 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 h cin $end
$var wire 1 i g $end
$var wire 1 j p $end
$var wire 1 k sum $end
$upscope $end
$scope module add3 $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 n cin $end
$var wire 1 o g $end
$var wire 1 p p $end
$var wire 1 q sum $end
$upscope $end
$scope module add4 $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 t cin $end
$var wire 1 u g $end
$var wire 1 v p $end
$var wire 1 w sum $end
$upscope $end
$scope module add5 $end
$var wire 1 x a $end
$var wire 1 y b $end
$var wire 1 z cin $end
$var wire 1 { g $end
$var wire 1 | p $end
$var wire 1 } sum $end
$upscope $end
$scope module add6 $end
$var wire 1 ~ a $end
$var wire 1 !" b $end
$var wire 1 "" cin $end
$var wire 1 #" g $end
$var wire 1 $" p $end
$var wire 1 %" sum $end
$upscope $end
$scope module add7 $end
$var wire 1 &" a $end
$var wire 1 '" b $end
$var wire 1 (" cin $end
$var wire 1 )" g $end
$var wire 1 *" p $end
$var wire 1 +" sum $end
$upscope $end
$scope module carry $end
$var wire 1 1 cin $end
$var wire 8 ," g [7:0] $end
$var wire 8 -" p [7:0] $end
$var wire 8 ." c [7:0] $end
$upscope $end
$upscope $end
$scope module generateOut $end
$var wire 1 /" s $end
$var wire 8 0" o [7:0] $end
$var wire 8 1" b [7:0] $end
$var wire 8 2" a [7:0] $end
$upscope $end
$scope module left $end
$var wire 1 3 in $end
$var wire 1 N out $end
$var wire 8 3" b [7:0] $end
$var wire 8 4" a [7:0] $end
$upscope $end
$scope module logicArithSelect $end
$var wire 8 5" a [7:0] $end
$var wire 1 6" s $end
$var wire 8 7" o [7:0] $end
$var wire 8 8" b [7:0] $end
$upscope $end
$scope module right $end
$var wire 1 3 in $end
$var wire 1 M out $end
$var wire 8 9" b [7:0] $end
$var wire 8 :" a [7:0] $end
$upscope $end
$scope module selectAddA $end
$var wire 8 ;" a [7:0] $end
$var wire 8 <" b [7:0] $end
$var wire 1 ; s $end
$var wire 8 =" o [7:0] $end
$upscope $end
$scope module selectAddB $end
$var wire 8 >" a [7:0] $end
$var wire 8 ?" b [7:0] $end
$var wire 1 ; s $end
$var wire 8 @" o [7:0] $end
$upscope $end
$scope module selectLogic0 $end
$var wire 1 A" s $end
$var wire 8 B" o [7:0] $end
$var wire 8 C" b [7:0] $end
$var wire 8 D" a [7:0] $end
$upscope $end
$scope module selectLogic10 $end
$var wire 8 E" a [7:0] $end
$var wire 8 F" b [7:0] $end
$var wire 1 G" s $end
$var wire 8 H" o [7:0] $end
$upscope $end
$scope module selectLogic11 $end
$var wire 8 I" a [7:0] $end
$var wire 8 J" b [7:0] $end
$var wire 1 K" s $end
$var wire 8 L" o [7:0] $end
$upscope $end
$scope module selectSignB $end
$var wire 8 M" a [7:0] $end
$var wire 1 N" s $end
$var wire 8 O" o [7:0] $end
$var wire 8 P" b [7:0] $end
$upscope $end
$scope module shiftLeftInSelect $end
$var wire 8 Q" a [7:0] $end
$var wire 8 R" b [7:0] $end
$var wire 1 > s $end
$var wire 8 S" o [7:0] $end
$upscope $end
$scope module shiftOutSelect $end
$var wire 8 T" a [7:0] $end
$var wire 8 U" b [7:0] $end
$var wire 1 ? s $end
$var wire 8 V" o [7:0] $end
$upscope $end
$scope module shiftRightInSelect $end
$var wire 8 W" a [7:0] $end
$var wire 8 X" b [7:0] $end
$var wire 1 ? s $end
$var wire 8 Y" o [7:0] $end
$upscope $end
$scope module subIn $end
$var wire 8 Z" a [7:0] $end
$var wire 8 [" minA [7:0] $end
$var wire 6 \" c [5:0] $end
$scope function genCar $end
$var reg 1 ]" a $end
$var reg 1 ^" c $end
$upscope $end
$scope function genMin $end
$var reg 1 _" a $end
$var reg 1 `" c $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x`"
x_"
x^"
x]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
b0 W"
bx V"
bx U"
bx T"
bx S"
bx R"
b0 Q"
bx P"
bx O"
xN"
bx M"
bx L"
xK"
bx J"
bx I"
bx H"
xG"
bx F"
bx E"
bx D"
bx C"
bx B"
xA"
bx @"
b0 ?"
bx >"
bx ="
b0 <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
x6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
x/"
bx ."
bx -"
bx ,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
xP
bx O
xN
xM
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
b0 B
bx A
x@
z?
x>
x=
x<
x;
bx :
bx 9
bx 8
x7
x6
x5
x4
x3
x2
x1
bx 0
bx /
bx .
x-
bx ,
bx +
bx *
x)
x(
x'
x&
x%
x$
x#
bx "
x!
$end
#5
0%
0-
0P
1+"
0("
1%"
0""
0}
0z
0|
0y
1w
0t
1*"
1v
1'"
1s
1q
1$"
1p
0n
1!"
1m
1k
1j
1#
1e
1g
0$
0h
b11011110 O
b11011110 U
b11011110 5"
0_
1d
b0 "
b0 H
b0 0"
b100000 K
b100000 2"
b100000 7"
b11011110 V
b11011110 -"
0^
1a
0\
0b
b11011110 Q
b11011110 Y
b11011110 O"
b0 X
b0 ."
b0 E
b0 1"
b0 V"
b100000 T
b100000 8"
b100000 B"
02
0`"
b0 \"
0^"
1]"
1_"
03
0]
0c
0i
0o
0u
0{
0#"
b0 W
b0 ,"
0)"
1<
b11011110 C
b11011110 P"
b11011110 ["
0[
0`
0f
0l
0r
0x
0~
0&"
b0 L
b0 3"
b0 T"
0N
0M
b0 G
b0 9"
b0 U"
1;
b0 J
b0 D"
b0 H"
b100000 I
b100000 C"
b100000 L"
06
05
b100000 R
b100000 @"
b100000 M"
b100000 Z"
b0 S
b0 Z
b0 ="
b0 F
b0 4"
b0 S"
b0 D
b0 :"
b0 Y"
01
0=
0>
0@
07
04
0N"
0G"
0K"
0A"
06"
0/"
b11111111 8
b11111111 E"
b0 /
b0 F"
b100000 :
b100000 I"
b100000 A
b100000 J"
0'
1)
x(
0&
b0 ,
b0 9
b100000 +
b100000 0
b100000 >"
b0 *
b0 .
b0 ;"
b0 R"
b0 X"
#10
xj
xp
x$"
x*"
xr
x&
x)
x'
x""
xb
x%
xz
x#
xv
bx K
bx 2"
bx 7"
x-
x$
bx "
bx H
bx 0"
x]
0g
0m
0s
0!"
0'"
xw
1\
xh
xn
xt
x("
xP
b11 Q
b11 Y
b11 O"
bx T
bx 8"
bx B"
bx X
bx ."
bx E
bx 1"
bx V"
x_
xe
xk
xq
x}
x%"
bx O
bx U
bx 5"
x+"
x2
1`"
1^"
1^
xc
0i
0o
bx11 V
bx11 -"
x|
0#"
b0xx W
b0xx ,"
0)"
b11 C
b11 P"
b11 ["
bx J
bx D"
bx H"
bx I
bx C"
bx L"
x[
x`
xf
xl
xx
x~
x&"
bx0 L
bx0 3"
bx0 T"
xN
xM
b0xxxxxxx G
b0xxxxxxx 9"
b0xxxxxxx U"
b11111111 R
b11111111 @"
b11111111 M"
b11111111 Z"
bx S
bx Z
bx ="
bx F
bx 4"
bx S"
bx D
bx :"
bx Y"
bx 8
bx E"
bx /
bx F"
b11111111 :
b11111111 I"
bx A
bx J"
b11111111 +
b11111111 0
b11111111 >"
bx *
bx .
bx ;"
bx R"
bx X"
#15
0&
1)
0'
1k
0_
0e
0h
0b
0%
0-
1#
0d
0q
1w
0}
1%"
b1010100 O
b1010100 U
b1010100 5"
0+"
0$
b0 "
b0 H
b0 0"
b10101010 K
b10101010 2"
b10101010 7"
0^
0a
1g
1s
1!"
0n
0t
0z
0""
0("
0P
0\
b0 X
b0 ."
b1010100 Q
b1010100 Y
b1010100 O"
b0 E
b0 1"
b0 V"
b10101010 T
b10101010 8"
b10101010 B"
02
0`"
1_"
0^"
1]"
0]
b0 W
b0 ,"
0c
1j
0p
1v
0|
1$"
b1010100 V
b1010100 -"
0*"
b1010100 C
b1010100 P"
b1010100 ["
0[
0`
0f
0l
0r
0x
0~
0&"
b0 L
b0 3"
b0 T"
0N
0M
b0 G
b0 9"
b0 U"
b11111111 J
b11111111 D"
b11111111 H"
b10101010 I
b10101010 C"
b10101010 L"
b10101010 R
b10101010 @"
b10101010 M"
b10101010 Z"
b0 S
b0 Z
b0 ="
b0 F
b0 4"
b0 S"
b0 D
b0 :"
b0 Y"
01
1G"
1K"
b11111111 8
b11111111 E"
b0 /
b0 F"
b10101010 :
b10101010 I"
b10101010 A
b10101010 J"
b1 ,
b1 9
b10101010 +
b10101010 0
b10101010 >"
b0 *
b0 .
b0 ;"
b0 R"
b0 X"
#20
x)
x'
1a
1m
1y
1'"
x#
b11111110 Q
b11111110 Y
b11111110 O"
x$
bx "
bx H
bx 0"
0n
0z
0("
0]"
b11111110 C
b11111110 P"
b11111110 ["
0_"
b0 X
b0 ."
bx E
bx 1"
bx V"
bx T
bx 8"
bx B"
0_
1e
1k
1q
1w
1}
1%"
b11111110 O
b11111110 U
b11111110 5"
1+"
x2
b0 R
b0 @"
b0 M"
b0 Z"
0^
1d
0i
1p
0u
1|
b0 W
b0 ,"
0#"
b11111110 V
b11111110 -"
1*"
0<
0[
0`
0f
0l
0r
0x
0~
0&"
bx0 L
bx0 3"
bx0 T"
xN
xM
b0xxxxxxx G
b0xxxxxxx 9"
b0xxxxxxx U"
0;
bx0x0x0x0 J
bx0x0x0x0 D"
bx0x0x0x0 H"
bx I
bx C"
bx L"
b11111110 K
b11111110 2"
b11111110 7"
b0 S
b0 Z
b0 ="
bx F
bx 4"
bx S"
bx D
bx :"
bx Y"
1=
0G"
0K"
16"
bx 8
bx E"
bx0x0x0x0 /
bx0x0x0x0 F"
b1x1x1x1x :
b1x1x1x1x I"
bx A
bx J"
b100 ,
b100 9
bx *
bx .
bx ;"
bx R"
bx X"
#25
bx "
bx H
bx 0"
bx E
bx 1"
bx V"
b1xxxx11x T
b1xxxx11x 8"
b1xxxx11x B"
x2
bx0 L
bx0 3"
bx0 T"
xN
xM
b0xxxxxxx G
b0xxxxxxx 9"
b0xxxxxxx U"
bx J
bx D"
bx H"
b1xxxx11x I
b1xxxx11x C"
b1xxxx11x L"
bx F
bx 4"
bx S"
bx D
bx :"
bx Y"
1G"
1K"
bx 8
bx E"
bx0000xx0 /
bx0000xx0 F"
b1xxxx11x :
b1xxxx11x I"
bx A
bx J"
b101 ,
b101 9
b10000110 +
b10000110 0
b10000110 >"
bx *
bx .
bx ;"
bx R"
bx X"
#30
x2
xM
b0 K
b0 2"
b0 7"
bx "
bx H
bx 0"
0e
0k
0q
0w
0}
0%"
b0 O
b0 U
b0 5"
0+"
bx E
bx 1"
bx V"
0d
0j
0p
0v
0|
0$"
b0 V
b0 -"
0*"
0a
0g
0m
0s
0y
0!"
0'"
b0 Q
b0 Y
b0 O"
bx0 L
bx0 3"
bx0 T"
xN
b0xxxxxxx G
b0xxxxxxx 9"
b0xxxxxxx U"
bx0xx0 J
bx0xx0 D"
bx0xx0 H"
bx I
bx C"
bx L"
bx0xx0 T
bx0xx0 8"
bx0xx0 B"
bx F
bx 4"
bx S"
bx D
bx :"
bx Y"
1N"
0G"
0K"
1A"
bx 8
bx E"
bx0xx0 /
bx0xx0 F"
b1111x11x :
b1111x11x I"
bx A
bx J"
b110 ,
b110 9
b11110110 +
b11110110 0
b11110110 >"
bx *
bx .
bx ;"
bx R"
bx X"
#35
x2
xM
bx "
bx H
bx 0"
bx E
bx 1"
bx V"
bx T
bx 8"
bx B"
bx0 L
bx0 3"
bx0 T"
xN
b0xxxxxxx G
b0xxxxxxx 9"
b0xxxxxxx U"
bx J
bx D"
bx H"
b111xxx11 I
b111xxx11 C"
b111xxx11 L"
bx F
bx 4"
bx S"
bx D
bx :"
bx Y"
1G"
1K"
bx 8
bx E"
bx000xx /
bx000xx F"
b111xxx11 :
b111xxx11 I"
bx A
bx J"
b111 ,
b111 9
b11100011 +
b11100011 0
b11100011 >"
bx *
bx .
bx ;"
bx R"
bx X"
#40
02
0M
1)
0'
b0 E
b0 1"
b0 V"
b0 T
b0 8"
b0 B"
03
1#
0-
0$
b0 "
b0 H
b0 0"
1<
b0 L
b0 3"
b0 T"
0N
b0 G
b0 9"
b0 U"
0=
b0 J
b0 D"
b0 H"
b11100011 I
b11100011 C"
b11100011 L"
14
b0 F
b0 4"
b0 S"
b0 D
b0 :"
b0 Y"
1>
0%
0G"
0K"
1/"
b11111111 8
b11111111 E"
b0 /
b0 F"
b11100011 :
b11100011 I"
b11100011 A
b11100011 J"
b1110 ,
b1110 9
0&
b0 *
b0 .
b0 ;"
b0 R"
b0 X"
#90
